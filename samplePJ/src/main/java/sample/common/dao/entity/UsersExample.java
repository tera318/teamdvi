package sample.common.dao.entity;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Iterator;

public class UsersExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public UsersExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andUsers_idIsNull() {
			addCriterion("users_id is null");
			return (Criteria) this;
		}

		public Criteria andUsers_idIsNotNull() {
			addCriterion("users_id is not null");
			return (Criteria) this;
		}

		public Criteria andUsers_idEqualTo(Object value) {
			addCriterion("users_id =", value, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idNotEqualTo(Object value) {
			addCriterion("users_id <>", value, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idGreaterThan(Object value) {
			addCriterion("users_id >", value, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idGreaterThanOrEqualTo(Object value) {
			addCriterion("users_id >=", value, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idLessThan(Object value) {
			addCriterion("users_id <", value, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idLessThanOrEqualTo(Object value) {
			addCriterion("users_id <=", value, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idIn(List<Object> values) {
			addCriterion("users_id in", values, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idNotIn(List<Object> values) {
			addCriterion("users_id not in", values, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idBetween(Object value1, Object value2) {
			addCriterion("users_id between", value1, value2, "users_id");
			return (Criteria) this;
		}

		public Criteria andUsers_idNotBetween(Object value1, Object value2) {
			addCriterion("users_id not between", value1, value2, "users_id");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("email is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("email is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(Object value) {
			addCriterion("email =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(Object value) {
			addCriterion("email <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(Object value) {
			addCriterion("email >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(Object value) {
			addCriterion("email >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(Object value) {
			addCriterion("email <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(Object value) {
			addCriterion("email <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<Object> values) {
			addCriterion("email in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<Object> values) {
			addCriterion("email not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(Object value1, Object value2) {
			addCriterion("email between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(Object value1, Object value2) {
			addCriterion("email not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("password is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("password is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(Object value) {
			addCriterion("password =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(Object value) {
			addCriterion("password <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(Object value) {
			addCriterion("password >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(Object value) {
			addCriterion("password >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(Object value) {
			addCriterion("password <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(Object value) {
			addCriterion("password <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<Object> values) {
			addCriterion("password in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<Object> values) {
			addCriterion("password not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(Object value1, Object value2) {
			addCriterion("password between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(Object value1, Object value2) {
			addCriterion("password not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andCreated_atIsNull() {
			addCriterion("created_at is null");
			return (Criteria) this;
		}

		public Criteria andCreated_atIsNotNull() {
			addCriterion("created_at is not null");
			return (Criteria) this;
		}

		public Criteria andCreated_atEqualTo(Date value) {
			addCriterionForJDBCDate("created_at =", value, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atNotEqualTo(Date value) {
			addCriterionForJDBCDate("created_at <>", value, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atGreaterThan(Date value) {
			addCriterionForJDBCDate("created_at >", value, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("created_at >=", value, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atLessThan(Date value) {
			addCriterionForJDBCDate("created_at <", value, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("created_at <=", value, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atIn(List<Date> values) {
			addCriterionForJDBCDate("created_at in", values, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atNotIn(List<Date> values) {
			addCriterionForJDBCDate("created_at not in", values, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("created_at between", value1, value2, "created_at");
			return (Criteria) this;
		}

		public Criteria andCreated_atNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("created_at not between", value1, value2, "created_at");
			return (Criteria) this;
		}

		public Criteria andTeam_nameIsNull() {
			addCriterion("team_name is null");
			return (Criteria) this;
		}

		public Criteria andTeam_nameIsNotNull() {
			addCriterion("team_name is not null");
			return (Criteria) this;
		}

		public Criteria andTeam_nameEqualTo(Object value) {
			addCriterion("team_name =", value, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameNotEqualTo(Object value) {
			addCriterion("team_name <>", value, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameGreaterThan(Object value) {
			addCriterion("team_name >", value, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameGreaterThanOrEqualTo(Object value) {
			addCriterion("team_name >=", value, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameLessThan(Object value) {
			addCriterion("team_name <", value, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameLessThanOrEqualTo(Object value) {
			addCriterion("team_name <=", value, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameIn(List<Object> values) {
			addCriterion("team_name in", values, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameNotIn(List<Object> values) {
			addCriterion("team_name not in", values, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameBetween(Object value1, Object value2) {
			addCriterion("team_name between", value1, value2, "team_name");
			return (Criteria) this;
		}

		public Criteria andTeam_nameNotBetween(Object value1, Object value2) {
			addCriterion("team_name not between", value1, value2, "team_name");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.users
	 * @mbg.generated  Thu Jun 05 11:17:51 JST 2025
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.users
     *
     * @mbg.generated do_not_delete_during_merge Wed Jun 04 13:44:15 JST 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}